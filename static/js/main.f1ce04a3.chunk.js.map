{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f1ce04a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import  { a } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"/\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-primary\" type=\"submit\"> Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>    \r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n   const handleUpClick = ()=>{\r\n      // console.log(\"Uppercase was clicked text\" + text );\r\n       let newText = text.toUpperCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted to uppercase!\", \"success\");\r\n   }\r\n\r\n   const handleLoClick = ()=>{\r\n      // console.log(\"Uppercase was clicked text\" + text );\r\n       let newText = text.toLowerCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted to lowercase!\", \"success\");\r\n   }\r\n\r\n   const handleClearClick = ()=>{\r\n      // console.log(\"Uppercase was clicked text\" + text );\r\n       let newText = '';\r\n       setText(newText)\r\n       props.showAlert(\"Text Cleared!\", \"success\");\r\n   }\r\n\r\n   const handleOnChange = (event)=>{\r\n      console.log(\"On change\");\r\n      setText(event.target.value);\r\n   }\r\n\r\n   const handleCopy = () => {\r\n      console.log(\"I am copy\");\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to clipboard\", \"success\");\r\n   }\r\n\r\n   const handleExtraSpaces = () => {\r\n      let  newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n      props.showAlert(\"Extra spaces removed\", \"success\");\r\n   }\r\n\r\n   const [text, setText] = useState('');\r\n   //  text = \"new text\"; // wrong way to change the state\r\n   //setText(\"new text\"); // Correct way to change the state \r\n   return (\r\n      <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n         <h1>{props.heading}</h1>\r\n         <div className=\"mb-3\">\r\n         <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'#3e36c6'}} id=\"myBox\" rows=\"8\"></textarea>\r\n         </div>\r\n         <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n         <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n         <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n         <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n         <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#3e36c6'}}>\r\n         <h2>Your text summary </h2>\r\n         <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n         <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n         <h2>Preview</h2>\r\n         <p>{text.length>0?text:\"Enter somthing in the textbox above to preview it here\" }</p>\r\n      </div>\r\n      </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   const capitalize = (word)=>{\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport React, { useState } from \"react\";\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n     setAlert({\n      msg: message,\n      type: type\n     })\n     setTimeout(() => {\n         setAlert(null);\n     }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#3e36c6';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode'\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" />  */}\n    {/* <Navbar/> */}\n    {/* <BrowserRouter> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Routes> */}\n    {/* /users --> Component 1\n/users/home --> Component 2 */}\n          {/* <Route exact path=\"about/*\"\n          element={<About />}/>\n          <Route exact path=\"/\" */}\n           <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n            {/* /> */}\n    {/* </Routes> */}\n    </div>\n    {/* </BrowserRouter> */}\n    </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}